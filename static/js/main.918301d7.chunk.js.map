{"version":3,"sources":["Note.js","Board.js","serviceWorker.js","index.js"],"names":["Note","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editing","edit","bind","assertThisInitialized","remove","save","renderDisplay","renderEdit","randomBetween","componentDidMount","style","transform","concat","x","y","s","Math","ceil","random","textArea","_newText","focus","select","nextProps","nextState","children","setState","e","preventDefault","onChange","value","index","onRemove","_this2","react_default","a","createElement","className","onSubmit","ref","input","defaultValue","name","id","rows","io","onDoubleClick","onClick","Component","Board","notes","eachNote","update","add","nextId","removeAll","newText","i","console","log","prevState","map","note","objectSpread","text","toConsumableArray","uniqueId","filter","n","src_Note","key","Boolean","window","location","hostname","match","ReactDOM","render","src_Board","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.918301d7.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport {IoIosTrash} from 'react-icons/io'\r\nimport {IoIosCreate} from 'react-icons/io'\r\nimport {IoIosSave} from 'react-icons/io'\r\n\r\n\r\nclass Note extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            editing: false\r\n        }\r\n\r\n        this.edit = this.edit.bind(this)\r\n        this.remove = this.remove.bind(this)\r\n        this.save = this.save.bind(this)\r\n        this.renderDisplay = this.renderDisplay.bind(this)\r\n        this.renderEdit = this.renderEdit.bind(this)\r\n        this.randomBetween = this.randomBetween.bind(this)\r\n        this.componentDidMount = this.componentDidMount.bind(this)\r\n\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.style ={\r\n            transform: `rotate(${this.randomBetween(25,-25,'deg')})`\r\n        }\r\n    }\r\n\r\n    randomBetween(x, y, s){\r\n        return x + Math.ceil((Math.random() * (y-x))) + s\r\n    }\r\n\r\n    componentDidMount(){\r\n        let textArea\r\n        if (this.state.editing){\r\n            textArea = this._newText\r\n            textArea.focus()\r\n            textArea.select()\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return(\r\n            this.props.children !== nextProps.children || this.state !== nextState\r\n        )\r\n    }\r\n\r\n    edit() {\r\n        this.setState({\r\n            editing: true\r\n        })\r\n    }\r\n\r\n    save(e){\r\n       e.preventDefault()\r\n        this.props.onChange(this._newText.value, this.props.index)\r\n        this.setState({\r\n            editing: false\r\n        })\r\n    }\r\n\r\n    remove() {\r\n        this.props.onRemove(this.props.index)\r\n    }\r\n\r\n    renderEdit() {\r\n        return (\r\n            <div className={\"note m-5 shadow rounded col-sm\"} style={this.style}>\r\n                <form onSubmit={this.save}>\r\n                    <textarea\r\n                        ref={input => {this._newText = input}}\r\n                        defaultValue={this.props.children}\r\n                        name=\"edit-note\"\r\n                        id=\"the-edit\"\r\n                        rows=\"6\"\r\n                        className={\"border-0\"}></textarea>\r\n                    <span><button className={\"btn bg-transparent\"}><IoIosSave/></button></span>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    renderDisplay() {\r\n        return (\r\n            <div className={\"note m-5 shadow rounded col-sm\"} style={this.style} onDoubleClick={this.edit}>\r\n                <div className={\"my-p d-block mx-auto text-center\"}>\r\n                    <p>{this.props.children}</p>\r\n                </div>\r\n                <span>\r\n                    <button className={\"btn bg-transparent\"} onClick={this.edit}><IoIosCreate/></button>\r\n                    <button className={\"btn bg-transparent\"} onClick={this.remove}><IoIosTrash/></button>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    render(){\r\n        return this.state.editing ? this.renderEdit() : this.renderDisplay()\r\n    }\r\n}\r\n\r\n\r\nexport default Note","import React, {Component} from 'react'\r\nimport {IoIosAddCircleOutline} from 'react-icons/io'\r\nimport {IoIosTrash} from 'react-icons/io'\r\nimport Note from \"./Note\";\r\n\r\n\r\nclass Board extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            notes: []\r\n        }\r\n\r\n\r\n        this.eachNote = this.eachNote.bind(this)\r\n        this.update = this.update.bind(this)\r\n        this.remove = this.remove.bind(this)\r\n        this.add = this.add.bind(this)\r\n        this.nextId = this.nextId.bind(this)\r\n        this.removeAll = this.removeAll.bind(this)\r\n\r\n    }\r\n\r\n    update(newText, i) {\r\n        console.log('updating item at index', i, newText)\r\n        this.setState(prevState => ({\r\n            notes: prevState.notes.map(\r\n                note => (note.id !== i) ? note : {...note, note: newText}\r\n            )\r\n        }))\r\n    }\r\n\r\n    add(text){\r\n        this.setState(prevState =>({\r\n            notes: [\r\n                ...prevState.notes,\r\n                {\r\n                    id: this.nextId(),\r\n                    note: text\r\n                }\r\n                    ]\r\n        }))\r\n    }\r\n\r\n\r\n    nextId(){\r\n        this.uniqueId = this.uniqueId || 0\r\n        return this.uniqueId++\r\n    }\r\n\r\n    remove(id){\r\n        console.log('removing item at ' + id)\r\n        this.setState(prevState => ({\r\n            notes: prevState.notes.filter(n => n.id !== id)\r\n        }))\r\n\r\n    }\r\n\r\n    removeAll(id){\r\n        this.setState( prevState => ({\r\n            notes: prevState.notes.filter(note => note.id === id)\r\n            })\r\n        )\r\n    }\r\n\r\n    eachNote(note){\r\n        return(\r\n            <Note\r\n                key={note.id}\r\n                index={note.id}\r\n                onChange={this.update}\r\n                onRemove={this.remove}\r\n            >\r\n                {note.note}\r\n            </Note>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"board container\"}>\r\n                <span className={'fixed-bottom'}>\r\n                    <button\r\n                        className={\"btn bg-transparent\"}\r\n                        onClick={this.add.bind(null,'new note')}><IoIosAddCircleOutline className={\"my-icon\"}/></button>\r\n                    <button\r\n                        className={\"btn bg-transparent\"}\r\n                        onClick={this.removeAll} ><IoIosTrash className={\"my-icon\"}/></button>\r\n                </span>\r\n                <div className={\"row justify-content-center\"}>\r\n                    {this.state.notes.map(this.eachNote)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Board from './Board';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Board />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}